@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="outer-div">
    <div class="inner-div">
        <h1>NoteShare</h1>
        <div class="input-container">
            <div class="background"></div>
            <input type="email" id="emailInput" @bind="@email" />
           <div class="label">
               <div class="label_background"></div>
               <div class="text">Email</div>
               </div>
        </div>
        <div class="input-container">
            <div class="background"></div>
            <input type="@txtType" id="passwordInput" @bind="@password" />
            <span class="e-input-eye fas fa-eye" @onclick="ShowPassword"><i class=""></i></span>
            <div class="label">
                <div class="label_background"></div>
                <div class="text">Jelszó</div>
         </div>
        </div>
        <div class="forgotten">
            <a href="/forgotten">Elfelejtett jelszó</a>
        </div>
        <button class="loginButton" @onclick="Login">Bejelentkezés</button>
        <div class="line"></div>
        <div class="registration">
            <p>Még nincs fiókod? <a href="/registration">Regisztráció</a></p>
        </div>
    </div>
</div>

@code{
    public string txtType = "password";
    private string password = "";
    private string email = "";
    private string message = "";
    private string token;
    protected override async Task OnInitializedAsync()
    {
        token = await SecureStorage.GetAsync("token");
        if(token is not null)
        {
            NavigationManager.NavigateTo("/dashboard");
        }
    }

    void ShowPassword()
    {
        if (this.txtType == "password")
        {
            this.txtType = "text";
        }
        else
        {
            this.txtType = "password";
        }
    }

    private async Task Login()
    {
        LoginDto ldto = new LoginDto
            {
                Email = email,
                Password = password
            };

        var authResponse = await AuthService.Login(ldto);
        token = await SecureStorage.GetAsync("token");
        //auth response is successfful?
        if(token is not null)
        {
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            message = "Hiba!";
        }

        
    }
}